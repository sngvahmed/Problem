#include "bits/stdc++.h"
#include <functional>
#include <ext/numeric> 
using namespace std;

#define SZ(x) (int)x.size()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define MMS(x, v) memset(x, v, sizeof(x))
#define SF(x) scanf("%d" , &x)

string toBase(long long num, int base) {
	if (num == 0)
		return "0";
	string str;
	while (num != 0) {
		int nlet = num % base;
		num /= base;
		if (nlet < 0) //for negative base
			num++, nlet += (-1 * base);
		if (nlet < 10)
			str += (nlet + '0');
		else
			str += (nlet - 10 + 'A');

	}
	reverse(str.begin(), str.end());
	return str;
}

long long toDecimal(string s, int base) {
	long long v, i, result = 0;
	for (i = 0; i < (int) s.size(); i++) {
		if (s[i] >= '0' && s[i] <= '9')
			v = s[i] - '0';
		else
			v = s[i] - 'A' + 10;
		result = result * base + v;
	}
	return result;
}
int find(int b, int e, char f, string str) {
	for (int i = b; i < min(e, SZ(str)); i++) {
		if (str[i] == f)
			return i;
	}
	return -1;
}
int main() {
	long long num1, num2;
	int n;
	cin >> n;
	while (n-- && cin >> num1 >> num2) {
		string n1 = toBase(num1, 2), n2 = toBase(num2, 2);
		cout << n1 << " " << n2 << endl;
		if (find(0, SZ(n1), '0', n1) == -1) {
			cout << num1 << endl;
		} else if (SZ(n1) != SZ(n2)) {
			string tmp = "";
			for (int i = 1; i < SZ(n1) ; i++)
				tmp += '1';
			cout << toDecimal(tmp, 2);
		} else {
			reverse(all(n1)), reverse(all(n2));
			string ret = n2;
			for (int i = 0; i < SZ(ret) - 1; i++) {
				int indx = find(i + 1, SZ(n1) - 1, '1', n1);
				if (ret[i] == '0' && indx != -1) {
					ret[i] = '1';
				}
			}
			cout << ret << endl;
			reverse(all(ret));
			cout << toDecimal(ret, 2) << endl;
		}
	}
	return 0;
}
