#include "bits/stdc++.h"
#include <functional>
#include <ext/numeric> 
using namespace std;

#define SZ(x) (int)x.size()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define MMS(x, v) memset(x, v, sizeof(x))

int main() {
	freopen("test.in", "rt", stdin);

	/*
	 5 5 3
	 7 14 2 9 5

	 var even :: 14  2
	 var odd  :: 7   9  5

	 14
	 2
	 7 5

	 */

	int n, k, p;
	vector<int> odd, even;
	scanf("%d%d%d", &n, &k, &p);

	for (int i = 0; i < n; i++) {
		int tmp;
		scanf("%d", &tmp);
		(tmp % 2 != 0) ? odd.pb(tmp) : even.pb(tmp);
	}
	vector<vector<int> > var(10000);

	if ((SZ(even) + (SZ(odd) / 2)) < p) {
		cout << -1 << endl;
		return 0;
	}

	int indxOdd = 0, i;
	for (i = 0; i < p; i++) {
		if (i >= SZ(even) && indxOdd >= SZ(odd)) {
			cout << -1 << endl;
			return 0;
		}
		if (p > 0 && i == 0 && SZ(even) > p)
			while (SZ(even) > p)
				var[0].pb(even[0]), even.erase(even.begin());

		if (i < SZ(even))
			var[i].pb(even[i]);
		else if (SZ(odd))
			var[i].pb(odd[indxOdd]), var[i].pb(odd[indxOdd + 1]), indxOdd += 2;

	}

	for (int j = 0; j < i; j++) {
		cout << "SZ :: " << SZ(var[j]) << endl;
		for (int l = 0; l < SZ(var[j]); l++)
			cout << var[j][l] << " ";
		cout << endl;
	}
	return 0;
}
