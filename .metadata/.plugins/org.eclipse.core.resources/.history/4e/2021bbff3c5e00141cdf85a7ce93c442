#include "bits/stdc++.h"
#include <functional>
#include <ext/numeric> 
using namespace std;

#define SZ(x) (int)x.size()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define MMS(x, v) memset(x, v, sizeof(x))
#define SF(x) scanf("%d" , &x)

long long prime[10000];

void sieve() {
	int N = 10000;
	memset(prime, -1, N * sizeof(prime[0]));
	prime[0] = prime[1] = false;
	int sqrtN = (int) sqrt((double) N);
	for (int i = 2; i <= sqrtN; i++)
		if (prime[i])
			for (int j = i * i; j < N; j += i)
				prime[j] = false;
		else primee[i] = i;
}

bool coprime(long long i, long long j, long long k) {
	if ((i % j == 0 && i % k == 0) || (j % k == 0 && j % i == 0)
			|| (k % i == 0 && k % j == 0))
		return false;

	cout << i << " " << j << " " << k << endl;
	return true;
}
int main() {
	long long st, end;
	cin >> st >> end;
	for (long long i = st; i <= end; i++) {
		for (long long j = i + 1; j <= end; j++) {
			for (long long k = j + 1; k <= end; k++) {
				if (coprime(i, j, k))
					return 0;
			}
		}
	}
	cout << -1 << endl;
	return 0;
}
